// Generated by CoffeeScript 1.8.0
Traitify.ui.resultsPersonalityTypes = function(Widget, options) {
  Widget.states.add("initialized");
  Widget.callbacks.add("Initialize");
  Widget.initialization.events.add("Setup Data", function() {
    var tfPersonalityTypes;
    tfPersonalityTypes = Widget.partials.render("Personality Types Container");
    return Widget.nodes.main.appendChild(tfPersonalityTypes);
  });
  Widget.partials.add("Personality Types Container", function() {
    var description, personalityTypes, personalityTypesContainer, personalityTypesWidgetContainer;
    personalityTypesWidgetContainer = Widget.nodes.addDiv("tfPersonalityTypes", Object());
    personalityTypesContainer = Widget.nodes.addDiv("personalityTypesContainer", Object());
    personalityTypes = this.render("Personality Types");
    description = Widget.nodes.addDiv("description");
    description.innerHTML = Widget.data.personality_types[0].personality_type.description;
    Widget.callbacks.trigger("Initialize");
    personalityTypesContainer.appendChild(personalityTypes);
    personalityTypesWidgetContainer.appendChild(personalityTypesContainer);
    personalityTypesWidgetContainer.appendChild(description);
    return personalityTypesWidgetContainer;
  });
  Widget.partials.add("Personality Types", function() {
    var arrow, arrowIcon, badge, index, name, personalityType, personalityTypes, pt, pts, score;
    personalityTypes = Widget.nodes.addDiv("personalityTypes", Object());
    pts = Array();
    arrowIcon = Widget.nodes.addDiv("icon");
    arrow = Widget.nodes.addDiv("arrow");
    arrow.appendChild(arrowIcon);
    personalityTypes.appendChild(arrow);
    for (index in Widget.data.personality_types) {
      pt = Widget.data.personality_types[index];
      personalityType = Widget.nodes.addDiv("personalityType", {
        "data-index": index
      });
      name = Widget.nodes.addDiv("name", Object(), pt.personality_type.name);
      name.style.color = pt.personality_type.badge.color_1;
      personalityType.appendChild(name);
      badge = Widget.nodes.addImg("badge", {
        src: pt.personality_type.badge.image_medium
      });
      personalityType.appendChild(badge);
      score = Widget.nodes.addDiv("score", Object(), "" + (Math.round(pt.score)) + " / 100");
      personalityType.appendChild(score);
      personalityTypes.appendChild(personalityType);
    }
    return personalityTypes;
  });
  Widget.events.add(function() {
    var personalityType, personalityTypes, _i, _len, _results;
    personalityTypes = document.querySelectorAll(".tf-personality-types .personality-type");
    _results = [];
    for (_i = 0, _len = personalityTypes.length; _i < _len; _i++) {
      personalityType = personalityTypes[_i];
      _results.push(personalityType.onclick = function() {
        var arrow, description, descriptionData, index;
        description = document.querySelector(".tf-personality-types .description");
        index = this.getAttribute("data-index");
        arrow = document.querySelector(".tf-personality-types .arrow");
        arrow.style.left = (index * 130) + "px";
        descriptionData = Widget.data.personality_types[index].personality_type.description;
        return description.innerHTML = descriptionData;
      });
    }
    return _results;
  });
  return Widget;
};
