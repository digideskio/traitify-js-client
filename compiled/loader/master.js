// Generated by CoffeeScript 1.8.0
Traitify.ui.load = function(assessmentId, target, options) {
  var Widgets, personalityTypesTarget;
  Widgets = Object();
  if (options == null) {
    options = Object();
  }
  Widgets.slideDeck = Traitify.ui.slideDeck(Bldr(target), options);
  Widgets.slideDeck.data.assessmentId = assessmentId;
  if (Traitify.ui.results) {
    Widgets.results = Traitify.ui.results(Bldr(target), options.results);
  }
  personalityTypesTarget = options.personalityTypes ? options.personalityTypes.target : Object();
  if (Traitify.ui.resultsPersonalityTypes) {
    Widgets.resultsPersonalityTypes = Traitify.ui.resultsPersonalityTypes(Bldr(personalityTypesTarget), options.personalityTypes);
  }
  if (options.personalityTypes == null) {
    options.personalityTypes = Object();
  }
  Widgets.slideDeck.nodes.main.innerHTML = Traitify.ui.styles;
  if (options == null) {
    options = Object();
  }
  if (options.results == null) {
    options.results = Object();
  }
  if (options.slideDeck == null) {
    options.slideDeck = Object();
  }
  if (options.personalityTypes == null) {
    options.personalityTypes = Object();
  }
  if (options.results.logging) {
    Widgets.results.states.logging(true);
  }
  if (options.slideDeck.logging) {
    Widgets.slideDeck.states.logging(true);
  }
  Traitify.getSlides(assessmentId).then(function(data) {
    var slides;
    slides = Object();
    slides.notCompleted = data.filter(function(slide) {
      return !slide.completed_at;
    });
    if (slides.notCompleted.length !== 0) {
      Widgets.slideDeck.data.assessmentId = assessmentId;
      Widgets.slideDeck.data.slides = Object();
      Widgets.slideDeck.data.slides.notCompleted = slides.notCompleted;
      Widgets.slideDeck.data.slides.completed = data.filter(function(slide) {
        return slide.completed_at;
      });
      return Widgets.slideDeck.initialize();
    } else {
      return Traitify.getPersonalityTypes(assessmentId, options.results.params || {
        image_pack: "linear"
      }).then(function(data) {
        Widgets.slideDeck.callbacks.trigger("Finished");
        if (Widgets.results) {
          Widgets.results.data = data;
          Widgets.results.initialize();
        }
        if (Widgets.resultsPersonalityTypes) {
          Widgets.resultsPersonalityTypes.data = data;
          return Widgets.resultsPersonalityTypes.initialize();
        }
      });
    }
  });
  return Widgets;
};

Traitify.ui.loadSlideDeck = function(assessmentId, target, options) {
  var Widget, results;
  Widget = Bldr(target);
  if (options == null) {
    options = Object();
  }
  if (Traitify.ui.slideDeck) {
    results = Traitify.ui.results(Bldr(target), options);
    return Traitify.getSlides(assessmentId, function(data) {
      results.data = data;
      return results.initialize();
    });
  } else {
    return console.log("BAD BUNDLE, RESULTS AREN'T AVAILABLE");
  }
};

Traitify.ui.loadResults = function(assessmentId, target, options) {
  var Results;
  if (options == null) {
    options = Object();
  }
  if (Traitify.ui.results) {
    Results = Traitify.ui.results(Bldr(target), options);
    Results.nodes.main.innerHTML = Traitify.ui.styles;
    return Traitify.getPersonalityTypes(assessmentId, options.params || {
      image_pack: "linear"
    }).then(function(data) {
      Results.data = data;
      return Results.initialize();
    });
  } else {
    return console.log("BAD BUNDLE, RESULTS AREN'T AVAILABLE");
  }
};
