// Generated by CoffeeScript 1.8.0
var Ui;

Ui = (function() {
  function Ui() {
    this.widgets = Object();
    this.userAgent = navigator.userAgent;
    this.runningWidgets = Object();
  }

  Ui.prototype.load = function(assessmentId, target, options, shiftedOptions) {
    var allWidgets, currentTarget, dataDependencies, nonSlideWidgets, slideWidgets, widget, widgetName, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
    if (options == null) {
      options = Object();
    }
    nonSlideWidgets = Object();
    slideWidgets = Object();
    if (widget = this.widgets[assessmentId]) {
      assessmentId = target;
      target = options;
      options = shiftedOptions;
      widget = widget(assessmentId, target, options);
      Traitify.ui.loadResults({
        slideDeck: widget
      });
      return widget;
    } else {
      allWidgets = Object();
      _ref = Object.keys(this.widgets);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        widgetName = _ref[_i];
        if (options[widgetName] && options[widgetName]["target"]) {
          currentTarget = options[widgetName]["target"];
        } else {
          currentTarget = target;
        }
        this.runningWidgets[widgetName] = this.widgets[widgetName](assessmentId, currentTarget, options);
        dataDependencies = this.runningWidgets[widgetName].dataDependencies;
        if (dataDependencies.indexOf("Slides") !== -1) {
          slideWidgets[widgetName] = this.runningWidgets[widgetName];
          slideWidgets[widgetName].widgets = allWidgets;
        } else {
          nonSlideWidgets[widgetName] = this.runningWidgets[widgetName];
          nonSlideWidgets[widgetName].widgets = allWidgets;
        }
      }
      if (Object.keys(slideWidgets).length !== 0) {
        Traitify.getSlides(assessmentId).then(function(slides) {
          var playedSlides, slideWidget, slideWidgetName, _j, _len1, _ref1, _results;
          playedSlides = slides.filter(function(slide) {
            return slide.completed_at !== null;
          });
          if (playedSlides.length !== slides.length) {
            _ref1 = Object.keys(slideWidgets);
            _results = [];
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              slideWidgetName = _ref1[_j];
              slideWidget = slideWidgets[slideWidgetName];
              slideWidget.data.add("Slides", slides);
              _results.push(slideWidget.run());
            }
            return _results;
          } else {
            return Traitify.ui.loadResults(nonSlideWidgets);
          }
        });
        _ref1 = Object.keys(nonSlideWidgets);
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          widgetName = _ref1[_j];
          allWidgets[widgetName] = nonSlideWidgets[widgetName];
        }
        _ref2 = Object.keys(slideWidgets);
        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
          widgetName = _ref2[_k];
          allWidgets[widgetName] = slideWidgets[widgetName];
        }
        return allWidgets;
      }
    }
  };

  Ui.prototype.loadResults = function(widgets) {
    var dependencies, dependency, results, widget, widgetName, _i, _len, _ref, _results;
    dependencies = Object();
    _ref = Object.keys(widgets);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      widgetName = _ref[_i];
      widget = widgets[widgetName];
      widget.widgets = widgets;
      _results.push((function() {
        var _j, _len1, _ref1, _results1;
        _ref1 = widget.dataDependencies;
        _results1 = [];
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          dependency = _ref1[_j];
          if (dependencies[dependency] !== true) {
            dependencies[dependency] = true;
            results = Traitify["get" + dependency](widget.assessmentId);
            results.cleanName = dependency;
            _results1.push(results.then(function(data) {
              var dependencyCheck, dependentWidgetNames, _k, _l, _len2, _len3, _ref2, _results2;
              dependency = this.cleanName;
              dependentWidgetNames = Object.keys(widgets).filter(function(widgetName) {
                widgets[widgetName];
                return widgets[widgetName].dataDependencies.indexOf(dependency) !== -1;
              });
              _results2 = [];
              for (_k = 0, _len2 = dependentWidgetNames.length; _k < _len2; _k++) {
                widgetName = dependentWidgetNames[_k];
                widget = widgets[widgetName];
                widget.data.add(dependency, data);
                dependencyCheck = true;
                _ref2 = widget.dataDependencies;
                for (_l = 0, _len3 = _ref2.length; _l < _len3; _l++) {
                  dependency = _ref2[_l];
                  if (!widget.data.get(dependency)) {
                    dependencyCheck === false;
                  }
                }
                if (dependencyCheck) {
                  _results2.push(widget.run());
                } else {
                  _results2.push(void 0);
                }
              }
              return _results2;
            }));
          } else {
            _results1.push(void 0);
          }
        }
        return _results1;
      })());
    }
    return _results;
  };

  Ui.prototype.widget = function(widgetName, callback) {
    var styles;
    styles = this.styles;
    return Traitify.ui.widgets[widgetName] = function(assessmentId, target, options) {
      var localWidget;
      localWidget = new Widget(target);
      localWidget.data.cookies.scope = assessmentId;
      localWidget.build = callback;
      localWidget.assessmentId = assessmentId;
      localWidget.options = options;
      localWidget.build(localWidget);
      return localWidget;
    };
  };

  return Ui;

})();

Traitify.ui = new Ui;

Traitify.ui.styles = Object();
