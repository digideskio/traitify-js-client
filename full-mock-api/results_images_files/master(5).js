// Generated by CoffeeScript 1.8.0
Traitify.ui.widget("personalityTypes", function(widget, options) {
  widget.states.add("initialized");
  widget.dataDependency("PersonalityTypes");
  widget.styleDependency("all");
  widget.styleDependency("results/personality-types");
  widget.callbacks.add("Initialize");
  widget.initialization.events.add("Setup Data", function() {
    return widget.views.render("Personality Types Container").appendTo("main");
  });
  widget.views.add("Personality Types Container", function() {
    var description, personalityTypesWidgetContainer;
    personalityTypesWidgetContainer = this.tags.div("tfPersonalityTypes");
    this.tags.div("personalityTypesContainerScroller").appendTo("tfPersonalityTypes");
    this.tags.div("personalityTypesContainer").appendTo("personalityTypesContainerScroller");
    this.render("Personality Types").appendTo("personalityTypesContainer");
    description = this.tags.div("description").appendTo("tfPersonalityTypes");
    description.innerHTML = widget.data.get("PersonalityTypes").personality_types[0].personality_type.description;
    widget.callbacks.trigger("Initialize");
    return personalityTypesWidgetContainer;
  });
  widget.views.add("Personality Types", function() {
    var index, name, personalityTypes, pt, pts, score;
    personalityTypes = this.tags.div("personalityTypes", Object());
    pts = Array();
    this.tags.div("arrow").appendTo("personalityTypes");
    this.tags.div("icon").appendTo("arrow");
    for (index in widget.data.get("PersonalityTypes").personality_types) {
      pt = widget.data.get("PersonalityTypes").personality_types[index];
      this.tags.div("personalityType", {
        "data-index": index
      }).appendTo("personalityTypes");
      name = this.tags.div("name", Object(), pt.personality_type.name).appendTo("personalityType");
      name.style.color = "#" + pt.personality_type.badge.color_1;
      this.tags.img("badge", pt.personality_type.badge.image_medium).appendTo("personalityType");
      score = this.tags.div("score", Object(), "" + (Math.round(pt.score)) + " / 100").appendTo("personalityType");
    }
    return personalityTypes;
  });
  return widget.initialization.events.add("personalityTypes", function() {
    var personalityType, personalityTypes, _i, _len, _results;
    personalityTypes = document.querySelectorAll(".tf-personality-types .personality-type");
    _results = [];
    for (_i = 0, _len = personalityTypes.length; _i < _len; _i++) {
      personalityType = personalityTypes[_i];
      _results.push(personalityType.onclick = function() {
        var arrow, description, descriptionData, index;
        description = document.querySelector(".tf-personality-types .description");
        index = this.getAttribute("data-index");
        arrow = document.querySelector(".tf-personality-types .arrow");
        arrow.style.left = (index * 130) + "px";
        descriptionData = widget.data.get("PersonalityTypes").personality_types[index].personality_type.description;
        return description.innerHTML = descriptionData;
      });
    }
    return _results;
  });
});
